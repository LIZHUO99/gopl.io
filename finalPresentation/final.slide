Go言語研修振り返り
~辛かった問題を振り返る~
20 Apr 2018
Tags: golang, present

nsasaki128

* 本題の前に

柴田さん、最後まで一緒に受講してくれたみなさん
*ありがとうございました！！*
一人ではやりきれなかったです。
教科書一冊まるまるやるのは本当に久しぶりでした。
※途中で止まっている本たち(TaPLを筆頭にもろもろ)もやらないと・・・

このような機会を作ってくださったyosuke_furukawaさんにも感謝ですし、
研修に理解を示してくださった部署のみなさんにも感謝です。


* Ch01 Ex06

  リサジュープログラムを修正してpaletteにもっと値を追加し、
  何らかの興味深い方法でSetColorIndexの第3引数を変更して複数の色で画像を生成するようにしなさい。

*何らかの興味深い方法* かつテストコードの用意どうすっぺか。。

* やったこと
色数を外で指定して、指定した数の色を良きように作成。
テストコードは柴田さんに質問。

.code ../ch01/ex06/main.go /^func addColor/,/^}/

* Ch02
PopCountはHacker's Delightを読んでいたので簡単だった。
※まだ1/4程度しか読めてないが。。

* Ch03 Ex02
  math パッケージの別の関数で可視化してみなさい。
  みなさんは、鶏卵の卵、モーグルのこぶ、乗馬用の鞍などを生成できますか。

大学院の時にCGをやっていたので、鞍点とかトーラスは知っていた。
鶏卵の卵、モーグルのこぶとかどんな数式だよ。。
ちなみに余力があればobjファイルをimportしてスタンフォードバニーとかも実装しようかと思っていた。

* やったこと
.code ../ch03/ex02/main.go /^func init/,/^}/

* Ch03 Ex05
  image.NewRGBA関数とcolor.RGBA型あるいはcolor.YCbCr型を使用して
  フルカラーのマンデルブロ集合を実装しなさい。

おしゃれな色合いにしたい！！

* やったこと
いろんなサイトを見て一番心に響いた色合いを参考にした。
http://courses.cms.caltech.edu/cs11/material/java/donnie/lab3/index.html

.code ../ch03/ex05/main.go /^func mandelbrot/,/^}/

* Ch04 Ex12 Ex14
  人気があるウェブコミック xkcd は JSON インタフェースを持っています。
  たとえば https://xkcd.com/571/info.0.json に対するリクエストは、
  多くのお気に入りのうちの一つであるコミック571の詳細な説明を生成します。
  それぞれの URL を (一度だけ!) ダウンロードして、オフラインインデックスを作成しなさい。
  それぞれのインデックスを使用して、コマンドラインで提供された検索語と一致するコミックの
  それぞれの URL と内容 (transcript) を表示するツール xkcd を書きなさい。

と

  GitHub への一度の問い合わせで、バグレポート、マイルストーン、ユーザの一覧を
  閲覧可能にするウェブサーバを作成しなさい。

この辺から単純なパズル的問題じゃなくなり辛い戦いの幕開け。
コードは特に載せません。

* Ch05 Ex11
  線形代数 (linear algebra) の講座の教官は、微積分学 (calculus) を これからは事前条件にすると決めました。
  循環を報告するように topoSort 関数を拡張しなさい。

年末年始が遊び呆けていたため、Ch05 Ch06は辛かった。
Ch05ではEx11が個人的に一番つまづいた。
再帰で呼ぶ操作の前後で見たことある変数名のmapを変更するのは比較的賢いかと自認。

Ch05ではdeferの概念を理解するのに時間がかかった。。

だんだんと凝った答えをする余裕がなくなる。。

* Ch06
IntSetが何かを理解するのに少し時間がかかった。
あとは64bitと32bit両方で正しく動くことの確認方法が悩みであった。

* Ch07 Ex02 Ex04 Ex06
  下記のシグニチャを持つ関数 CountingWriter を書きなさい。
  io.Writer が与えられたなら、それを包む新たな Writer と int64 変数への ポインタを返します
  その変数は新たな Writer に書き込まれたバイト数を常に保持しています。

新しいWriterのポインタが返り値になるのが、例題と異なっていて気持ち悪かった。

  strings.NewReader 関数は、その引数である文字列から読み込むことで
  io.Reader インタフェース (と他のインタフェース) を満足する値を返します。
  みなさん自身で簡単な NewReader を実装し、HTML パーサ (5.2節) が 文字列からの入力を受け取るようにしなさい。

Readerの挙動をgo docで読まず、parserの処理を読んで考えていた。。


  多くの GUI は、状態を持つ多段ソートの表ウィジットを提供しています。
  一次ソートキーは最も直近にクリックされた列の見出し、
  二次ソートキーは二番目にクリックされた列の見出しといった具合になります。
  このような表が仕様する sort.Interface の実装を定義しなさい。
  その実装を sort.Stable を使用する繰り返しソートと比較しなさい。
  
n次ソートキーまで指定できるようにするために、メソッドチェーンを用いて実現したこと。

Ch07 Ex13以降は楽しくもしんどかった。詳細は略

* Ch08 Ch09

*FTPは鬼畜*
ゴルーチンやチャネルに関しては自分の中での理解が曖昧なところが多々ある。
並列処理ってこれまでほとんど実装したことがなく経験が不十分だと考えているので、自分の幅を広げる意味でももう少し学んでいきたい。

※Concurrency in Goを読むのがいいのかなぁ？

* Ch10 Ex02
  ZIP ファイル (archive/zip) と POSIX tar ファイル (archive/tar) を読み込むことができる
  汎用のアーカイブ読み込み関数を定義しなさい。
  個々のファイル形式のサポートをブランクインポートを使って組み込むために、
  前述の方法と同様な登録の仕組みを使いなさい。

実は未だにうまく動かず、苦しんでいる。。。

* Ch11 Ex06
  2.6.2 節の PopCount の実装と練習問題 2.4 と 2.5 のみなさんの解答を比較するためのベンチマークを書きなさい。
  表に基く方法の方がよくなるのはどの時点からですか。

賢すぎるコンパイラ相手に上手なベンチマークを書くの大変。。

* Ch12

書籍のページに載っているソースコードに助けられた。。

* Ch13
正直、全体的に理解は曖昧。
が、どうしてもCのライブラリが必要になった時に使えるってことだけ知っていれば良いかと思っている。

* 最後にもう一度

柴田さん、最後まで一緒に受講してくれたみなさん
*ありがとうございました！！*
一人ではやりきれなかったです。
教科書一冊まるまるやるのは本当に久しぶりでした。

このような機会を作ってくださったyosuke_furukawaさんにも感謝ですし、
研修に理解を示してくださった部署のみなさんにも感謝です。
